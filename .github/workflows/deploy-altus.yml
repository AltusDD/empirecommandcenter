# deploy.yml
# This workflow vendors dependencies locally and deploys the function app.

name: Deploy (OIDC)

on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
  push:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read

    env:
      ENV_APP_NAME: altus-dropbox-integration   # <- your Function App name

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # Login to Azure with OIDC (uses your repo secrets)
      - name: Azure login (OIDC)
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      # Install Python 3.11 and vendor dependencies into the app folder
      - name: Set up Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Vendor Python dependencies for Azure Functions
        run: |
          python -m pip install --upgrade pip
          # The --pre flag allows pip to find the beta SDK version.
          pip install --pre -r requirements.txt -t .python_packages/lib/site-packages
          # tiny marker so we can verify the step ran
          echo "deps-installed: $(date -u +"%Y-%m-%dT%H:%M:%SZ")" > .python_packages/INSTALLED.txt

      # Create the deployment zip (exclude CI & local junk only)
      - name: Package function app
        run: |
          zip -r functionapp.zip . \
            -x "*.git*" \
            -x ".github/*" \
            -x "node_modules/*" \
            -x "__pycache__/*"

      # Deploy via Functions Action (Run-From-Package on Linux Consumption)
      - name: Deploy via Functions Action
        uses: azure/functions-action@v1
        with:
          app-name: ${{ env.ENV_APP_NAME }}
          package: functionapp.zip
          slot-name: production
